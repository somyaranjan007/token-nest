export const basketTokenContractABI = {
  abi: [
    {
      type: "constructor",
      inputs: [
        { name: "_name", type: "string", internalType: "string" },
        { name: "_symbol", type: "string", internalType: "string" },
        {
          name: "tokens",
          type: "tuple[]",
          internalType: "struct IConstant.BasketInfo[]",
          components: [
            { name: "addr", type: "address", internalType: "address" },
            { name: "percent", type: "uint8", internalType: "uint8" },
            { name: "image", type: "string", internalType: "string" },
          ],
        },
      ],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "WETH",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "allowance",
      inputs: [
        { name: "owner", type: "address", internalType: "address" },
        { name: "spender", type: "address", internalType: "address" },
      ],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "approve",
      inputs: [
        { name: "spender", type: "address", internalType: "address" },
        { name: "value", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "balanceOf",
      inputs: [{ name: "account", type: "address", internalType: "address" }],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "createdAt",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "decimals",
      inputs: [],
      outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "depositBasketToken",
      inputs: [{ name: "_to", type: "address", internalType: "address" }],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "payable",
    },
    {
      type: "function",
      name: "downVote",
      inputs: [],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "downVotes",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "getBasketData",
      inputs: [],
      outputs: [
        {
          name: "",
          type: "tuple",
          internalType: "struct ERC7621.ERC7621Data",
          components: [
            { name: "name", type: "string", internalType: "string" },
            { name: "symbol", type: "string", internalType: "string" },
            { name: "tokenAddress", type: "address", internalType: "address" },
            {
              name: "basketTokens",
              type: "tuple[]",
              internalType: "struct IConstant.BasketInfo[]",
              components: [
                { name: "addr", type: "address", internalType: "address" },
                { name: "percent", type: "uint8", internalType: "uint8" },
                { name: "image", type: "string", internalType: "string" },
              ],
            },
            { name: "upVotes", type: "uint256", internalType: "uint256" },
            { name: "downVotes", type: "uint256", internalType: "uint256" },
            { name: "createdAt", type: "uint256", internalType: "uint256" },
          ],
        },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "getOwner",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "listedTokens",
      inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      outputs: [
        { name: "addr", type: "address", internalType: "address" },
        { name: "percent", type: "uint8", internalType: "uint8" },
        { name: "image", type: "string", internalType: "string" },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "name",
      inputs: [],
      outputs: [{ name: "", type: "string", internalType: "string" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "owner",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "symbol",
      inputs: [],
      outputs: [{ name: "", type: "string", internalType: "string" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "totalSupply",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "transfer",
      inputs: [
        { name: "to", type: "address", internalType: "address" },
        { name: "value", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "transferFrom",
      inputs: [
        { name: "from", type: "address", internalType: "address" },
        { name: "to", type: "address", internalType: "address" },
        { name: "value", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "uniswapRouter",
      inputs: [],
      outputs: [
        {
          name: "",
          type: "address",
          internalType: "contract IUniswapV2Router02",
        },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "upVote",
      inputs: [],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "upVotes",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "votedAddress",
      inputs: [{ name: "", type: "address", internalType: "address" }],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "withdrawBasketToken",
      inputs: [{ name: "_to", type: "address", internalType: "address" }],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "event",
      name: "Approval",
      inputs: [
        {
          name: "owner",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "spender",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "value",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Transfer",
      inputs: [
        {
          name: "from",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        { name: "to", type: "address", indexed: true, internalType: "address" },
        {
          name: "value",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "error",
      name: "ERC20InsufficientAllowance",
      inputs: [
        { name: "spender", type: "address", internalType: "address" },
        { name: "allowance", type: "uint256", internalType: "uint256" },
        { name: "needed", type: "uint256", internalType: "uint256" },
      ],
    },
    {
      type: "error",
      name: "ERC20InsufficientBalance",
      inputs: [
        { name: "sender", type: "address", internalType: "address" },
        { name: "balance", type: "uint256", internalType: "uint256" },
        { name: "needed", type: "uint256", internalType: "uint256" },
      ],
    },
    {
      type: "error",
      name: "ERC20InvalidApprover",
      inputs: [{ name: "approver", type: "address", internalType: "address" }],
    },
    {
      type: "error",
      name: "ERC20InvalidReceiver",
      inputs: [{ name: "receiver", type: "address", internalType: "address" }],
    },
    {
      type: "error",
      name: "ERC20InvalidSender",
      inputs: [{ name: "sender", type: "address", internalType: "address" }],
    },
    {
      type: "error",
      name: "ERC20InvalidSpender",
      inputs: [{ name: "spender", type: "address", internalType: "address" }],
    },
  ],
  bytecode: {
    object:
      "",
    sourceMap:
      "284:5111:33:-:0;;;342:112;;;-1:-1:-1;;;;;;342:112:33;411:42;342:112;;;728:253;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:5;865:7;1962:5:25;:13;858:5:33;1962::25;:13;:::i;:::-;-1:-1:-1;1985:7:25;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;884:5:33::1;:18:::0;;-1:-1:-1;;;;;;884:18:33::1;892:10;884:18;::::0;;-1:-1:-1;912:25:33::1;930:6:::0;912:17:::1;:25::i;:::-;-1:-1:-1::0;;959:15:33::1;947:9;:27:::0;-1:-1:-1;284:5111:33;;1217:693;1325:1;1309:6;:13;:17;1301:57;;;;-1:-1:-1;;;1301:57:33;;6277:2:41;1301:57:33;;;6259:21:41;6316:2;6296:18;;;6289:30;6355:29;6335:18;;;6328:57;6402:18;;1301:57:33;;;;;;;;;1368:20;1407:9;1402:423;1426:6;:13;1422:1;:17;1402:423;;;1520:1;-1:-1:-1;;;;;1485:37:33;1493:6;1500:1;1493:9;;;;;;;;:::i;:::-;;;;;;;:14;;;-1:-1:-1;;;;;1485:37:33;;1460:126;;;;-1:-1:-1;;;1460:126:33;;6765:2:41;1460:126:33;;;6747:21:41;6804:2;6784:18;;;6777:30;6843:32;6823:18;;;6816:60;6893:18;;1460:126:33;6563:354:41;1460:126:33;1645:1;1625:6;1632:1;1625:9;;;;;;;;:::i;:::-;;;;;;;:17;;;:21;;;1600:125;;;;-1:-1:-1;;;1600:125:33;;7124:2:41;1600:125:33;;;7106:21:41;7163:2;7143:18;;;7136:30;7202:34;7182:18;;;7175:62;-1:-1:-1;;;7253:18:41;;;7246:43;7306:19;;1600:125:33;6922:409:41;1600:125:33;1755:6;1762:1;1755:9;;;;;;;;:::i;:::-;;;;;;;:17;;;1739:33;;;;;;;:::i;:::-;;;1786:12;1804:6;1811:1;1804:9;;;;;;;;:::i;:::-;;;;;;;;;;;;1786:28;;;;;;;;-1:-1:-1;1786:28:33;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1786:28:33;-1:-1:-1;;;;;;1786:28:33;;;-1:-1:-1;;;;;1786:28:33;;;;;;;;;;;;;;;;;1804:9;;1786:28;;;;;;;:::i;:::-;-1:-1:-1;;;1441:3:33;;1402:423;;;;1842:12;1858:3;1842:19;1834:69;;;;-1:-1:-1;;;1834:69:33;;7765:2:41;1834:69:33;;;7747:21:41;7804:2;7784:18;;;7777:30;7843:34;7823:18;;;7816:62;-1:-1:-1;;;7894:18:41;;;7887:35;7939:19;;1834:69:33;7563:401:41;1834:69:33;1291:619;1217:693;:::o;14:127:41:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:251;218:2;212:9;260:2;248:15;;-1:-1:-1;;;;;278:34:41;;314:22;;;275:62;272:88;;;340:18;;:::i;:::-;376:2;369:22;146:251;:::o;402:275::-;473:2;467:9;538:2;519:13;;-1:-1:-1;;515:27:41;503:40;;-1:-1:-1;;;;;558:34:41;;594:22;;;555:62;552:88;;;620:18;;:::i;:::-;656:2;649:22;402:275;;-1:-1:-1;402:275:41:o;682:667::-;736:5;789:3;782:4;774:6;770:17;766:27;756:55;;807:1;804;797:12;756:55;834:13;;-1:-1:-1;;;;;859:30:41;;856:56;;;892:18;;:::i;:::-;936:59;983:2;960:17;;-1:-1:-1;;956:31:41;989:4;952:42;936:59;:::i;:::-;1020:6;1011:7;1004:23;1074:3;1067:4;1058:6;1050;1046:19;1042:30;1039:39;1036:59;;;1091:1;1088;1081:12;1036:59;1113:1;1123:144;1137:6;1134:1;1131:13;1123:144;;;1250:4;1234:14;;;1230:25;;1224:32;1200:15;;;1196:26;;1189:68;1152:12;1123:144;;;-1:-1:-1;1316:1:41;1287:20;;;1309:4;1283:31;1276:42;;;;1291:7;682:667;-1:-1:-1;;;682:667:41:o;1354:2207::-;1516:6;1524;1532;1585:2;1573:9;1564:7;1560:23;1556:32;1553:52;;;1601:1;1598;1591:12;1553:52;1628:16;;-1:-1:-1;;;;;1656:30:41;;1653:50;;;1699:1;1696;1689:12;1653:50;1722:61;1775:7;1766:6;1755:9;1751:22;1722:61;:::i;:::-;1829:2;1814:18;;1808:25;1712:71;;-1:-1:-1;1808:25:41;-1:-1:-1;;;;;;1845:32:41;;1842:52;;;1890:1;1887;1880:12;1842:52;1913:63;1968:7;1957:8;1946:9;1942:24;1913:63;:::i;:::-;2022:2;2007:18;;2001:25;1903:73;;-1:-1:-1;2001:25:41;-1:-1:-1;;;;;;2038:32:41;;2035:52;;;2083:1;2080;2073:12;2035:52;2106:24;;2161:4;2153:13;;2149:27;-1:-1:-1;2139:55:41;;2190:1;2187;2180:12;2139:55;2217:9;;-1:-1:-1;;;;;2238:30:41;;2235:56;;;2271:18;;:::i;:::-;2317:6;2314:1;2310:14;2344:28;2368:2;2364;2360:11;2344:28;:::i;:::-;2406:19;;;2450:2;2480:11;;;2476:20;;;2441:12;;;;2508:19;;;2505:39;;;2540:1;2537;2530:12;2505:39;2572:2;2568;2564:11;2553:22;;2584:947;2600:6;2595:3;2592:15;2584:947;;;2673:10;;-1:-1:-1;;;;;2699:35:41;;2696:55;;;2747:1;2744;2737:12;2696:55;2774:20;;2846:2;2818:16;;;-1:-1:-1;;2814:30:41;2810:39;2807:59;;;2862:1;2859;2852:12;2807:59;2892:22;;:::i;:::-;2956:2;2948:11;;2942:18;-1:-1:-1;;;;;2995:33:41;;2983:46;;2973:74;;3043:1;3040;3033:12;2973:74;3060:22;;3124:2;3116:11;;3110:18;3176:4;3163:18;;3151:31;;3141:59;;3196:1;3193;3186:12;3141:59;3231:2;3220:14;;3213:31;3287:2;3279:11;;3273:18;-1:-1:-1;;;;;3307:32:41;;3304:52;;;3352:1;3349;3342:12;3304:52;3392:65;3449:7;3444:2;3433:8;3429:2;3425:17;3421:26;3392:65;:::i;:::-;3387:2;3376:14;;3369:89;-1:-1:-1;3471:18:41;;-1:-1:-1;3518:2:41;2617:12;;;;3509;;;;2584:947;;;3550:5;3540:15;;;;;;;1354:2207;;;;;:::o;3566:380::-;3645:1;3641:12;;;;3688;;;3709:61;;3763:4;3755:6;3751:17;3741:27;;3709:61;3816:2;3808:6;3805:14;3785:18;3782:38;3779:161;;3862:10;3857:3;3853:20;3850:1;3843:31;3897:4;3894:1;3887:15;3925:4;3922:1;3915:15;3779:161;;3566:380;;;:::o;4077:518::-;4179:2;4174:3;4171:11;4168:421;;;4215:5;4212:1;4205:16;4259:4;4256:1;4246:18;4329:2;4317:10;4313:19;4310:1;4306:27;4300:4;4296:38;4365:4;4353:10;4350:20;4347:47;;;-1:-1:-1;4388:4:41;4347:47;4443:2;4438:3;4434:12;4431:1;4427:20;4421:4;4417:31;4407:41;;4498:81;4516:2;4509:5;4506:13;4498:81;;;4575:1;4561:16;;4542:1;4531:13;4498:81;;;4502:3;;4168:421;4077:518;;;:::o;4771:1299::-;4891:10;;-1:-1:-1;;;;;4913:30:41;;4910:56;;;4946:18;;:::i;:::-;4975:97;5065:6;5025:38;5057:4;5051:11;5025:38;:::i;:::-;5019:4;4975:97;:::i;:::-;5121:4;5152:2;5141:14;;5169:1;5164:649;;;;5857:1;5874:6;5871:89;;;-1:-1:-1;5926:19:41;;;5920:26;5871:89;-1:-1:-1;;4728:1:41;4724:11;;;4720:24;4716:29;4706:40;4752:1;4748:11;;;4703:57;5973:81;;5134:930;;5164:649;4024:1;4017:14;;;4061:4;4048:18;;-1:-1:-1;;5200:20:41;;;5318:222;5332:7;5329:1;5326:14;5318:222;;;5414:19;;;5408:26;5393:42;;5521:4;5506:20;;;;5474:1;5462:14;;;;5348:12;5318:222;;;5322:3;5568:6;5559:7;5556:19;5553:201;;;5629:19;;;5623:26;-1:-1:-1;;5712:1:41;5708:14;;;5724:3;5704:24;5700:37;5696:42;5681:58;5666:74;;5553:201;-1:-1:-1;;;;5800:1:41;5784:14;;;5780:22;5767:36;;-1:-1:-1;4771:1299:41:o;6431:127::-;6492:10;6487:3;6483:20;6480:1;6473:31;6523:4;6520:1;6513:15;6547:4;6544:1;6537:15;7336:222;7401:9;;;7422:10;;;7419:133;;;7474:10;7469:3;7465:20;7462:1;7455:31;7509:4;7506:1;7499:15;7537:4;7534:1;7527:15;7419:133;7336:222;;;;:::o;7563:401::-;284:5111:33;;;;;;",
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      "",
    sourceMap:
      "284:5111:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;-1:-1:-1;4293:186:25;;;;;:::i;:::-;;:::i;:::-;;;1292:14:41;;1285:22;1267:41;;1255:2;1240:18;4293:186:25;1127:187:41;588:22:33;;;;;;;;;;;;;;;;;;;1465:25:41;;;1453:2;1438:18;588:22:33;1319:177:41;3144:97:25;;;;;;;;;;-1:-1:-1;3222:12:25;;3144:97;;5039:244;;;;;;;;;;-1:-1:-1;5039:244:25;;;;;:::i;:::-;;:::i;4928:392:33:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4341:81::-;;;;;;;;;;;;;:::i;:::-;;3002:82:25;;;;;;;;;;-1:-1:-1;3002:82:25;;3075:2;3779:36:41;;3767:2;3752:18;3002:82:25;3637:184:41;539:42:33;;;;;;;;;;-1:-1:-1;539:42:33;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1916:1092::-;;;;;;:::i;:::-;;:::i;3299:116:25:-;;;;;;;;;;-1:-1:-1;3299:116:25;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:25;3364:7;3390:18;;;;;;;;;;;;3299:116;342:112:33;;;;;;;;;;-1:-1:-1;342:112:33;;;;-1:-1:-1;;;;;342:112:33;;;;;;-1:-1:-1;;;;;4840:32:41;;;4822:51;;4810:2;4795:18;342:112:33;4648:231:41;4843:79:33;;;;;;;;;;-1:-1:-1;4910:5:33;;-1:-1:-1;;;;;4910:5:33;4843:79;;316:20;;;;;;;;;;-1:-1:-1;316:20:33;;;;-1:-1:-1;;;;;316:20:33;;;677:44;;;;;;;;;;-1:-1:-1;677:44:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;2276:93:25;;;;;;;;;;;;;:::i;616:24:33:-;;;;;;;;;;;;;;;;3610:178:25;;;;;;;;;;-1:-1:-1;3610:178:25;;;;;:::i;:::-;;:::i;460:73:33:-;;;;;;;;;;;;491:42;460:73;;3014:1066;;;;;;;;;;-1:-1:-1;3014:1066:33;;;;;:::i;:::-;;:::i;646:24::-;;;;;;;;;;;;;;;;3846:140:25;;;;;;;;;;-1:-1:-1;3846:140:25;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:25;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;4258:77:33;;;;;;;;;;;;;:::i;2074:89:25:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:28;4420:31:25;735:10:28;4436:7:25;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:28;5182:37:25;5198:4;735:10:28;5213:5:25;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:25;;5039:244;-1:-1:-1;;;;5039:244:25:o;4928:392:33:-;4974:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4974:18:33;5023:290;;;;;;;;5059:6;:4;:6::i;:::-;5023:290;;;;5091:8;:6;:8::i;:::-;5023:290;;;;5139:4;-1:-1:-1;;;;;5023:290:33;;;;;5176:12;5023:290;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5023:290:33;;;;-1:-1:-1;;;5023:290:33;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5215:7;;5023:290;;;;5251:9;;5023:290;;;;5289:9;;5023:290;;;5004:309;;4928:392;:::o;4341:81::-;4379:10;4140:19;;;;:12;:19;;;;;;;;4139:20;4131:67;;;;-1:-1:-1;;;4131:67:33;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;4208:19:33;;;;;;:12;:19;;;;;:26;;-1:-1:-1;;4208:26:33;4230:4;4208:26;;;;;;4401:9:::1;:14:::0;;4230:4;;4401:9;;:14:::1;::::0;4230:4;;4401:14:::1;:::i;:::-;::::0;;;-1:-1:-1;;;4341:81:33:o;539:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;539:42:33;;;-1:-1:-1;;;;539:42:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1916:1092::-;1981:4;2018:10;2005:9;:23;;1997:66;;;;-1:-1:-1;;;1997:66:33;;6609:2:41;1997:66:33;;;6591:21:41;6648:2;6628:18;;;6621:30;6687:32;6667:18;;;6660:60;6737:18;;1997:66:33;6407:354:41;1997:66:33;2073:18;2094:21;:19;:21::i;:::-;2073:42;;2130:9;2125:501;2149:12;:19;2145:23;;2125:501;;;2189:33;2225:12;2238:1;2225:15;;;;;;;;:::i;:::-;;;;;;;;;;2189:51;;;;;;;;2225:15;;;;;;;2189:51;;-1:-1:-1;;;;;2189:51:33;;;;;-1:-1:-1;;;2189:51:33;;;;;;;;;;;;;;;;;;2225:15;2189:51;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:20;2307:3;2290:5;:13;;;2278:25;;:9;:25;;;;:::i;:::-;2277:33;;;;:::i;:::-;2348:16;;;2362:1;2348:16;;;;;;;;2254:56;;-1:-1:-1;2324:21:33;;2348:16;;;;;;;;;;;;-1:-1:-1;2348:16:33;2324:40;;491:42;2378:4;2383:1;2378:7;;;;;;;;:::i;:::-;;;;;;:14;-1:-1:-1;;;;;2378:14:33;;;-1:-1:-1;;;;;2378:14:33;;;;;2416:5;:10;;;2406:4;2411:1;2406:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2406:20:33;;;:7;;;;;;;;;:20;2440:13;;:175;;-1:-1:-1;;;2440:175:33;;:13;;;:35;;2483:12;;2440:175;;:13;;2533:4;;2563;;2586:15;;2440:175;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2440:175:33;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2170:3:33;;;;;-1:-1:-1;2125:501:33;;-1:-1:-1;2125:501:33;;;2635:24;2686:10;2662:21;:19;:21::i;:::-;:34;;;;:::i;:::-;2635:61;;2706:13;2737:21;2744:13;3222:12:25;;;3144:97;2744:13:33;2737:6;:21::i;:::-;2733:153;;;-1:-1:-1;2784:3:33;2733:153;;;3222:12:25;;2835:32:33;;:16;:32;:::i;:::-;2834:40;;2871:3;2834:40;:::i;:::-;2818:57;;2733:153;2895:17;2915:34;;;2916:22;2935:3;2916:16;:22;:::i;:::-;2915:34;;;;:::i;:::-;2895:54;;2959:21;2965:3;2970:9;2959:5;:21::i;:::-;-1:-1:-1;2997:4:33;;1916:1092;-1:-1:-1;;;;;1916:1092:33:o;2276:93:25:-;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:28;3733:27:25;735:10:28;3750:2:25;3754:5;3733:9;:27::i;3014:1066:33:-;-1:-1:-1;;;;;3390:18:25;;3072:4:33;3390:18:25;;;;;;;;;;;3150:1:33;3139:8;:12;3131:56;;;;-1:-1:-1;;;3131:56:33;;9896:2:41;3131:56:33;;;9878:21:41;9935:2;9915:18;;;9908:30;9974:33;9954:18;;;9947:61;10025:18;;3131:56:33;9694:355:41;3131:56:33;3198:24;3237:13;3222:12:25;;;3144:97;3237:13:33;3226:24;;:8;:24;:::i;:::-;3225:32;;3254:3;3225:32;:::i;:::-;3198:59;;3273:9;3268:754;3292:12;:19;3288:23;;3268:754;;;3332:33;3368:12;3381:1;3368:15;;;;;;;;:::i;:::-;;;;;;;;;;3332:51;;;;;;;;3368:15;;;;;;;3332:51;;-1:-1:-1;;;;;3332:51:33;;;;;-1:-1:-1;;;3332:51:33;;;;;;;;;;;;;;;;;;3368:15;3332:51;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3332:51:33;;;;-1:-1:-1;;3427:10:33;;3420:43;;-1:-1:-1;;;3420:43:33;;3457:4;3420:43;;;4822:51:41;3332::33;;-1:-1:-1;3397:20:33;;-1:-1:-1;;;;;3420:28:33;;;;-1:-1:-1;3420:28:33;;4795:18:41;;3420:43:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3397:66;-1:-1:-1;3477:24:33;3540:3;3505:31;3520:16;3397:66;3505:31;:::i;:::-;3504:39;;;;:::i;:::-;3565:10;;3610:13;;3558:114;;-1:-1:-1;;;3558:114:33;;-1:-1:-1;;;;;3610:13:33;;;3558:114;;;10463:51:41;10530:18;;;10523:34;;;3477:66:33;;-1:-1:-1;3558:26:33;;;;10436:18:41;;3558:114:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3711:16:33;;;3725:1;3711:16;;;;;;;;3687:21;;3711:16;;;;;;;;;;-1:-1:-1;3711:16:33;3687:40;;3751:5;:10;;;3741:4;3746:1;3741:7;;;;;;;;:::i;:::-;;;;;;:20;-1:-1:-1;;;;;3741:20:33;;;-1:-1:-1;;;;;3741:20:33;;;;;491:42;3775:4;3780:1;3775:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3775:14:33;;;:7;;;;;;;;;:14;3804:13;;:207;;-1:-1:-1;;;3804:207:33;;:13;;;:64;;:207;;3886:16;;3804:13;;3939:4;;3961:3;;3982:15;;3804:207;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3313:3:33;;;;;-1:-1:-1;3268:754:33;;-1:-1:-1;;;;;3268:754:33;;;4032:20;4038:3;4043:8;4032:5;:20::i;:::-;-1:-1:-1;4069:4:33;;3014:1066;-1:-1:-1;;;3014:1066:33:o;4258:77::-;4294:10;4140:19;;;;:12;:19;;;;;;;;4139:20;4131:67;;;;-1:-1:-1;;;4131:67:33;;;;;;;:::i;:::-;-1:-1:-1;;;;;4208:19:33;;;;;;:12;:19;;;;;:26;;-1:-1:-1;;4208:26:33;4230:4;4208:26;;;;;;4316:7:::1;:12:::0;;4230:4;;4316:7;;:12:::1;::::0;4230:4;;4316:12:::1;:::i;8989:128:25:-:0;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:25;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:25;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:25;;-1:-1:-1;;;;;11657:32:41;;10936:60:25;;;11639:51:41;11706:18;;;11699:34;;;11749:18;;;11742:34;;;11612:18;;10936:60:25;11437:345:41;10881:130:25;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:25;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:25;;5807:1;5780:30;;;4822:51:41;4795:18;;5780:30:25;4648:231:41;5735:86:25;-1:-1:-1;;;;;5834:16:25;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:25;;5902:1;5873:32;;;4822:51:41;4795:18;;5873:32:25;4648:231:41;5830:86:25;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;4428:232:33:-;4482:18;;4512:142;4536:12;:19;4532:23;;4512:142;;;4597:12;4610:1;4597:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:20;4590:53;;-1:-1:-1;;;4590:53:33;;4637:4;4590:53;;;4822:51:41;-1:-1:-1;;;;;4597:20:33;;;;4590:38;;4795:18:41;;4590:53:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4576:67;;;;:::i;:::-;;-1:-1:-1;4557:3:33;;4512:142;;;;4428:232;:::o;4666:171::-;4720:4;4740:5;4749:1;4740:10;4736:95;;-1:-1:-1;4773:4:33;;4666:171;-1:-1:-1;4666:171:33:o;4736:95::-;-1:-1:-1;4815:5:33;;4666:171;-1:-1:-1;4666:171:33:o;4736:95::-;4666:171;;;:::o;7721:208:25:-;-1:-1:-1;;;;;7791:21:25;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:25;;7864:1;7835:32;;;4822:51:41;4795:18;;7835:32:25;4648:231:41;7787:91:25;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;-1:-1:-1;;;;;8317:21:25;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:25;;8388:1;8361:30;;;4822:51:41;4795:18;;8361:30:25;4648:231:41;8313:89:25;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;9949:432::-;-1:-1:-1;;;;;10061:19:25;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:25;;10132:1;10103:32;;;4822:51:41;4795:18;;10103:32:25;4648:231:41;10057:89:25;-1:-1:-1;;;;;10159:21:25;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:25;;10231:1;10203:31;;;4822:51:41;4795:18;;10203:31:25;4648:231:41;10155:90:25;-1:-1:-1;;;;;10254:18:25;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:25;10342:5;-1:-1:-1;;;;;10333:31:25;;10358:5;10333:31;;;;1465:25:41;;1453:2;1438:18;;1319:177;10333:31:25;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:25;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:25;;-1:-1:-1;6356:540:25;;-1:-1:-1;;;;;6570:15:25;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:25;;-1:-1:-1;;;;;11657:32:41;;6649:50:25;;;11639:51:41;11706:18;;;11699:34;;;11749:18;;;11742:34;;;11612:18;;6649:50:25;11437:345:41;6599:115:25;-1:-1:-1;;;;;6834:15:25;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:25;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:25;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:25;7355:4;-1:-1:-1;;;;;7346:25:25;;7365:5;7346:25;;;;1465::41;;1453:2;1438:18;;1319:177;7346:25:25;;;;;;;;6271:1107;;;:::o;14:400:41:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:139;170:6;167:1;164:13;156:139;;;278:4;263:13;;;259:24;;253:31;233:11;;;229:22;;222:63;185:12;156:139;;;160:3;340:1;333:4;324:6;319:3;315:16;311:27;304:38;403:4;396:2;392:7;387:2;379:6;375:15;371:29;366:3;362:39;358:50;351:57;;;14:400;;;;:::o;419:220::-;568:2;557:9;550:21;531:4;588:45;629:2;618:9;614:18;606:6;588:45;:::i;:::-;580:53;419:220;-1:-1:-1;;;419:220:41:o;644:173::-;712:20;;-1:-1:-1;;;;;761:31:41;;751:42;;741:70;;807:1;804;797:12;822:300;890:6;898;951:2;939:9;930:7;926:23;922:32;919:52;;;967:1;964;957:12;919:52;990:29;1009:9;990:29;:::i;:::-;980:39;1088:2;1073:18;;;;1060:32;;-1:-1:-1;;;822:300:41:o;1501:374::-;1578:6;1586;1594;1647:2;1635:9;1626:7;1622:23;1618:32;1615:52;;;1663:1;1660;1653:12;1615:52;1686:29;1705:9;1686:29;:::i;:::-;1676:39;;1734:38;1768:2;1757:9;1753:18;1734:38;:::i;:::-;1501:374;;1724:48;;-1:-1:-1;;;1841:2:41;1826:18;;;;1813:32;;1501:374::o;1880:1752::-;2069:2;2058:9;2051:21;2032:4;2107:6;2101:13;2150:4;2145:2;2134:9;2130:18;2123:32;2178:52;2225:3;2214:9;2210:19;2196:12;2178:52;:::i;:::-;2164:66;;2279:2;2271:6;2267:15;2261:22;2351:2;2347:7;2335:9;2327:6;2323:22;2319:36;2314:2;2303:9;2299:18;2292:64;2379:41;2413:6;2397:14;2379:41;:::i;:::-;2478:2;2466:15;;2460:22;-1:-1:-1;;;;;2456:48:41;2451:2;2436:18;;;2429:76;;;;2542:15;;2536:22;2599;;;-1:-1:-1;;2595:36:41;2589:3;2574:19;;2567:65;2681:21;;2711:22;;;2365:55;;-1:-1:-1;2761:2:41;2846:23;;;;-1:-1:-1;2749:15:41;;;;2681:21;2807:1;2803:14;;;2791:27;;2787:36;-1:-1:-1;2897:522:41;2911:6;2908:1;2905:13;2897:522;;;2976:19;;;-1:-1:-1;;2972:33:41;2960:46;;3029:13;;3074:9;;-1:-1:-1;;;;;3070:35:41;3055:51;;3161:2;3153:11;;;3147:18;3167:4;3143:29;3126:15;;;3119:54;3222:2;3214:11;;;3208:18;3263:2;3246:15;;;3239:27;;;3208:18;3289:50;;3323:15;;3208:18;3289:50;:::i;:::-;3374:2;3362:15;;;;3397:12;;;;;3279:60;-1:-1:-1;;2933:1:41;2926:9;2897:522;;;2901:3;3474;3466:6;3462:16;3456:23;3450:3;3439:9;3435:19;3428:52;3535:3;3527:6;3523:16;3517:23;3511:3;3500:9;3496:19;3489:52;3597:3;3589:6;3585:16;3579:23;3572:4;3561:9;3557:20;3550:53;3620:6;3612:14;;;;;;;1880:1752;;;;:::o;3826:226::-;3885:6;3938:2;3926:9;3917:7;3913:23;3909:32;3906:52;;;3954:1;3951;3944:12;3906:52;-1:-1:-1;3999:23:41;;3826:226;-1:-1:-1;3826:226:41:o;4057:395::-;-1:-1:-1;;;;;4258:32:41;;4240:51;;4339:4;4327:17;;4322:2;4307:18;;4300:45;4381:2;4376;4361:18;;4354:30;;;-1:-1:-1;;4401:45:41;;4427:18;;4419:6;4401:45;:::i;:::-;4393:53;4057:395;-1:-1:-1;;;;;4057:395:41:o;4457:186::-;4516:6;4569:2;4557:9;4548:7;4544:23;4540:32;4537:52;;;4585:1;4582;4575:12;4537:52;4608:29;4627:9;4608:29;:::i;5092:260::-;5160:6;5168;5221:2;5209:9;5200:7;5196:23;5192:32;5189:52;;;5237:1;5234;5227:12;5189:52;5260:29;5279:9;5260:29;:::i;:::-;5250:39;;5308:38;5342:2;5331:9;5327:18;5308:38;:::i;:::-;5298:48;;5092:260;;;;;:::o;5357:380::-;5436:1;5432:12;;;;5479;;;5500:61;;5554:4;5546:6;5542:17;5532:27;;5500:61;5607:2;5599:6;5596:14;5576:18;5573:38;5570:161;;5653:10;5648:3;5644:20;5641:1;5634:31;5688:4;5685:1;5678:15;5716:4;5713:1;5706:15;5570:161;;5357:380;;;:::o;5742:398::-;5944:2;5926:21;;;5983:2;5963:18;;;5956:30;6022:34;6017:2;6002:18;;5995:62;-1:-1:-1;;;6088:2:41;6073:18;;6066:32;6130:3;6115:19;;5742:398::o;6145:127::-;6206:10;6201:3;6197:20;6194:1;6187:31;6237:4;6234:1;6227:15;6261:4;6258:1;6251:15;6277:125;6342:9;;;6363:10;;;6360:36;;;6376:18;;:::i;6766:127::-;6827:10;6822:3;6818:20;6815:1;6808:31;6858:4;6855:1;6848:15;6882:4;6879:1;6872:15;6898:168;6971:9;;;7002;;7019:15;;;7013:22;;6999:37;6989:71;;7040:18;;:::i;7071:217::-;7111:1;7137;7127:132;;7181:10;7176:3;7172:20;7169:1;7162:31;7216:4;7213:1;7206:15;7244:4;7241:1;7234:15;7127:132;-1:-1:-1;7273:9:41;;7071:217::o;7293:127::-;7354:10;7349:3;7345:20;7342:1;7335:31;7385:4;7382:1;7375:15;7409:4;7406:1;7399:15;7425:446;7478:3;7516:5;7510:12;7543:6;7538:3;7531:19;7575:4;7570:3;7566:14;7559:21;;7614:4;7607:5;7603:16;7637:1;7647:199;7661:6;7658:1;7655:13;7647:199;;;7726:13;;-1:-1:-1;;;;;7722:39:41;7710:52;;7791:4;7782:14;;;;7819:17;;;;7758:1;7676:9;7647:199;;;-1:-1:-1;7862:3:41;;7425:446;-1:-1:-1;;;;7425:446:41:o;7876:510::-;8147:6;8136:9;8129:25;8190:3;8185:2;8174:9;8170:18;8163:31;8110:4;8211:57;8263:3;8252:9;8248:19;8240:6;8211:57;:::i;:::-;-1:-1:-1;;;;;8304:32:41;;;;8299:2;8284:18;;8277:60;-1:-1:-1;8368:2:41;8353:18;8346:34;8203:65;7876:510;-1:-1:-1;;7876:510:41:o;8391:1165::-;8486:6;8539:2;8527:9;8518:7;8514:23;8510:32;8507:52;;;8555:1;8552;8545:12;8507:52;8588:9;8582:16;8621:18;8613:6;8610:30;8607:50;;;8653:1;8650;8643:12;8607:50;8676:22;;8729:4;8721:13;;8717:27;-1:-1:-1;8707:55:41;;8758:1;8755;8748:12;8707:55;8791:2;8785:9;8817:18;8809:6;8806:30;8803:56;;;8839:18;;:::i;:::-;8885:6;8882:1;8878:14;8921:2;8915:9;8984:2;8980:7;8975:2;8971;8967:11;8963:25;8955:6;8951:38;9055:6;9043:10;9040:22;9019:18;9007:10;9004:34;9001:62;8998:88;;;9066:18;;:::i;:::-;9102:2;9095:22;9152;;;9202:2;9232:11;;;9228:20;;;9152:22;9190:15;;9260:19;;;9257:39;;;9292:1;9289;9282:12;9257:39;9324:2;9320;9316:11;9305:22;;9336:189;9352:6;9347:3;9344:15;9336:189;;;9442:10;;9465:18;;;9512:2;9369:12;;;;9442:10;;-1:-1:-1;9503:12:41;9336:189;;;-1:-1:-1;9544:6:41;8391:1165;-1:-1:-1;;;;;;8391:1165:41:o;9561:128::-;9628:9;;;9649:11;;;9646:37;;;9663:18;;:::i;10054:230::-;10124:6;10177:2;10165:9;10156:7;10152:23;10148:32;10145:52;;;10193:1;10190;10183:12;10145:52;-1:-1:-1;10238:16:41;;10054:230;-1:-1:-1;10054:230:41:o;10568:277::-;10635:6;10688:2;10676:9;10667:7;10663:23;10659:32;10656:52;;;10704:1;10701;10694:12;10656:52;10736:9;10730:16;10789:5;10782:13;10775:21;10768:5;10765:32;10755:60;;10811:1;10808;10801:12;10850:582;11149:6;11138:9;11131:25;11192:6;11187:2;11176:9;11172:18;11165:34;11235:3;11230:2;11219:9;11215:18;11208:31;11112:4;11256:57;11308:3;11297:9;11293:19;11285:6;11256:57;:::i;:::-;-1:-1:-1;;;;;11349:32:41;;;;11344:2;11329:18;;11322:60;-1:-1:-1;11413:3:41;11398:19;11391:35;11248:65;10850:582;-1:-1:-1;;;10850:582:41:o",
    linkReferences: {},
  },
  methodIdentifiers: {
    "WETH()": "ad5c4648",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "createdAt()": "cf09e0d0",
    "decimals()": "313ce567",
    "depositBasketToken(address)": "6c6e0c05",
    "downVote()": "2ed606e5",
    "downVotes()": "a1b9e1e6",
    "getBasketData()": "2beb12a8",
    "getOwner()": "893d20e8",
    "listedTokens(uint256)": "5a9d1ac3",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "uniswapRouter()": "735de9f7",
    "upVote()": "eed7c128",
    "upVotes()": "0a985930",
    "votedAddress(address)": "9432a10c",
    "withdrawBasketToken(address)": "be868054",
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint8","name":"percent","type":"uint8"},{"internalType":"string","name":"image","type":"string"}],"internalType":"struct IConstant.BasketInfo[]","name":"tokens","type":"tuple[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"WETH","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"createdAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"}],"name":"depositBasketToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"downVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"downVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBasketData","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"tokenAddress","type":"address"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint8","name":"percent","type":"uint8"},{"internalType":"string","name":"image","type":"string"}],"internalType":"struct IConstant.BasketInfo[]","name":"basketTokens","type":"tuple[]"},{"internalType":"uint256","name":"upVotes","type":"uint256"},{"internalType":"uint256","name":"downVotes","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct ERC7621.ERC7621Data","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"listedTokens","outputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint8","name":"percent","type":"uint8"},{"internalType":"string","name":"image","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"uniswapRouter","outputs":[{"internalType":"contract IUniswapV2Router02","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"upVote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"upVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"votedAddress","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"}],"name":"withdrawBasketToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it\'s overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``\'s tokens of at least `value`."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"src/BasketToken.sol":"ERC7621"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@openzeppelin/=lib/openzeppelin-contracts/",":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",":@uniswap/v2-periphery/=lib/v2-periphery/",":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",":forge-std/=lib/forge-std/src/",":openzeppelin-contracts/=lib/openzeppelin-contracts/",":v2-periphery/=lib/v2-periphery/contracts/"]},"sources":{"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7","license":"MIT","urls":["bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f","dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"]},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"keccak256":"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80","license":"MIT","urls":["bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229","dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"]},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70","license":"MIT","urls":["bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c","dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"]},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2","license":"MIT","urls":["bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850","dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"]},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","license":"MIT","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"]},"lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol":{"keccak256":"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2","urls":["bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb","dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG"]},"lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol":{"keccak256":"0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d","urls":["bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c","dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG"]},"src/BasketToken.sol":{"keccak256":"0xb1e0ba00680d90faa7d0165a6ac6e2efaea0f5d17e3e0bb48b4391212f80565c","license":"MIT","urls":["bzz-raw://2ed129a9e34100d19cabf272b14920ad4a74f7738c8cf3304c552165c272b60d","dweb:/ipfs/Qmdue1EKDZUMoozq2bf6hRdZ7aPYXVkRZoWTeYYqWyGYfw"]},"src/interface/IConstant.sol":{"keccak256":"0x7e23227f0fdbe8e28418b3d70eb599cbaa634c7a3830e116af6b3ec69126a8a8","license":"MIT","urls":["bzz-raw://6c23a545c5ec72a2338be7286aaf9d9cf988faf0802dd3b16b709cf58e4dcecf","dweb:/ipfs/QmSPhqickvSxUswKqEGbMkuzgqFqKZDfdZSrByFdZKWAAU"]}},"version":1}',
  metadata: {
    compiler: { version: "0.8.26+commit.8a97fa7a" },
    language: "Solidity",
    output: {
      abi: [
        {
          inputs: [
            { internalType: "string", name: "_name", type: "string" },
            { internalType: "string", name: "_symbol", type: "string" },
            {
              internalType: "struct IConstant.BasketInfo[]",
              name: "tokens",
              type: "tuple[]",
              components: [
                { internalType: "address", name: "addr", type: "address" },
                { internalType: "uint8", name: "percent", type: "uint8" },
                { internalType: "string", name: "image", type: "string" },
              ],
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "allowance", type: "uint256" },
            { internalType: "uint256", name: "needed", type: "uint256" },
          ],
          type: "error",
          name: "ERC20InsufficientAllowance",
        },
        {
          inputs: [
            { internalType: "address", name: "sender", type: "address" },
            { internalType: "uint256", name: "balance", type: "uint256" },
            { internalType: "uint256", name: "needed", type: "uint256" },
          ],
          type: "error",
          name: "ERC20InsufficientBalance",
        },
        {
          inputs: [
            { internalType: "address", name: "approver", type: "address" },
          ],
          type: "error",
          name: "ERC20InvalidApprover",
        },
        {
          inputs: [
            { internalType: "address", name: "receiver", type: "address" },
          ],
          type: "error",
          name: "ERC20InvalidReceiver",
        },
        {
          inputs: [
            { internalType: "address", name: "sender", type: "address" },
          ],
          type: "error",
          name: "ERC20InvalidSender",
        },
        {
          inputs: [
            { internalType: "address", name: "spender", type: "address" },
          ],
          type: "error",
          name: "ERC20InvalidSpender",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "Approval",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "Transfer",
          anonymous: false,
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "WETH",
          outputs: [{ internalType: "address", name: "", type: "address" }],
        },
        {
          inputs: [
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "address", name: "spender", type: "address" },
          ],
          stateMutability: "view",
          type: "function",
          name: "allowance",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        },
        {
          inputs: [
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "approve",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [
            { internalType: "address", name: "account", type: "address" },
          ],
          stateMutability: "view",
          type: "function",
          name: "balanceOf",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "createdAt",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "decimals",
          outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
        },
        {
          inputs: [{ internalType: "address", name: "_to", type: "address" }],
          stateMutability: "payable",
          type: "function",
          name: "depositBasketToken",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "function",
          name: "downVote",
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "downVotes",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "getBasketData",
          outputs: [
            {
              internalType: "struct ERC7621.ERC7621Data",
              name: "",
              type: "tuple",
              components: [
                { internalType: "string", name: "name", type: "string" },
                { internalType: "string", name: "symbol", type: "string" },
                {
                  internalType: "address",
                  name: "tokenAddress",
                  type: "address",
                },
                {
                  internalType: "struct IConstant.BasketInfo[]",
                  name: "basketTokens",
                  type: "tuple[]",
                  components: [
                    { internalType: "address", name: "addr", type: "address" },
                    { internalType: "uint8", name: "percent", type: "uint8" },
                    { internalType: "string", name: "image", type: "string" },
                  ],
                },
                { internalType: "uint256", name: "upVotes", type: "uint256" },
                { internalType: "uint256", name: "downVotes", type: "uint256" },
                { internalType: "uint256", name: "createdAt", type: "uint256" },
              ],
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "getOwner",
          outputs: [{ internalType: "address", name: "", type: "address" }],
        },
        {
          inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
          name: "listedTokens",
          outputs: [
            { internalType: "address", name: "addr", type: "address" },
            { internalType: "uint8", name: "percent", type: "uint8" },
            { internalType: "string", name: "image", type: "string" },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "name",
          outputs: [{ internalType: "string", name: "", type: "string" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "owner",
          outputs: [{ internalType: "address", name: "", type: "address" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "symbol",
          outputs: [{ internalType: "string", name: "", type: "string" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "totalSupply",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        },
        {
          inputs: [
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "transfer",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [
            { internalType: "address", name: "from", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "value", type: "uint256" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "transferFrom",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "uniswapRouter",
          outputs: [
            {
              internalType: "contract IUniswapV2Router02",
              name: "",
              type: "address",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "function",
          name: "upVote",
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "upVotes",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        },
        {
          inputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
          name: "votedAddress",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [{ internalType: "address", name: "_to", type: "address" }],
          stateMutability: "nonpayable",
          type: "function",
          name: "withdrawBasketToken",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
      ],
      devdoc: {
        kind: "dev",
        methods: {
          "allowance(address,address)": { details: "See {IERC20-allowance}." },
          "approve(address,uint256)": {
            details:
              "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.",
          },
          "balanceOf(address)": { details: "See {IERC20-balanceOf}." },
          "decimals()": {
            details:
              "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.",
          },
          "name()": { details: "Returns the name of the token." },
          "symbol()": {
            details:
              "Returns the symbol of the token, usually a shorter version of the name.",
          },
          "totalSupply()": { details: "See {IERC20-totalSupply}." },
          "transfer(address,uint256)": {
            details:
              "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.",
          },
          "transferFrom(address,address,uint256)": {
            details:
              "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.",
          },
        },
        version: 1,
      },
      userdoc: { kind: "user", methods: {}, version: 1 },
    },
    settings: {
      remappings: [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v2-periphery/=lib/v2-periphery/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "v2-periphery/=lib/v2-periphery/contracts/",
      ],
      optimizer: { enabled: true, runs: 200 },
      metadata: { bytecodeHash: "ipfs" },
      compilationTarget: { "src/BasketToken.sol": "ERC7621" },
      evmVersion: "paris",
      libraries: {},
    },
    sources: {
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        keccak256:
          "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        urls: [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        keccak256:
          "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        urls: [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        keccak256:
          "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        urls: [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq",
        ],
        license: "MIT",
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":
        {
          keccak256:
            "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
          urls: [
            "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
            "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV",
          ],
          license: "MIT",
        },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        keccak256:
          "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        urls: [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF",
        ],
        license: "MIT",
      },
      "lib/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
        keccak256:
          "0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2",
        urls: [
          "bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb",
          "dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG",
        ],
        license: null,
      },
      "lib/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
        keccak256:
          "0x744e30c133bd0f7ca9e7163433cf6d72f45c6bb1508c2c9c02f1a6db796ae59d",
        urls: [
          "bzz-raw://9bf2f4454ad63d4cff03a0630e787d9e8a9deed80aec89682cd8ad6379d9ef8c",
          "dweb:/ipfs/Qme51hQNR2wpax7ooUadhtqLtXm8ffeVVYyubLkTT4wMCG",
        ],
        license: null,
      },
      "src/BasketToken.sol": {
        keccak256:
          "0xb1e0ba00680d90faa7d0165a6ac6e2efaea0f5d17e3e0bb48b4391212f80565c",
        urls: [
          "bzz-raw://2ed129a9e34100d19cabf272b14920ad4a74f7738c8cf3304c552165c272b60d",
          "dweb:/ipfs/Qmdue1EKDZUMoozq2bf6hRdZ7aPYXVkRZoWTeYYqWyGYfw",
        ],
        license: "MIT",
      },
      "src/interface/IConstant.sol": {
        keccak256:
          "0x7e23227f0fdbe8e28418b3d70eb599cbaa634c7a3830e116af6b3ec69126a8a8",
        urls: [
          "bzz-raw://6c23a545c5ec72a2338be7286aaf9d9cf988faf0802dd3b16b709cf58e4dcecf",
          "dweb:/ipfs/QmSPhqickvSxUswKqEGbMkuzgqFqKZDfdZSrByFdZKWAAU",
        ],
        license: "MIT",
      },
    },
    version: 1,
  },
  id: 33,
};
